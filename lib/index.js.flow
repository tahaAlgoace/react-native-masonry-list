/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.21.0
 */



import type {
            ([obj, keys]) => {
    return `$Diff<${printers.node.printType(obj)},${Record([keys, {
      kind: _typescript.default.SyntaxKind.AnyKeyword
    }], false)}>`;
  },RefreshControlProps,ScrollViewProps,StyleProp,ViewStyle
            } from 'react-native';
import {
            ScrollView
            } from 'react-native';
import type {
            MutableRefObject,Element
            } from 'react';
import React from 'react';
declare type Props<T> = {
innerRef?: MutableRefObject<ScrollView | void>,
loading?: boolean,
refreshing?: $PropertyType<RefreshControlProps, "refreshing">,
onRefresh?: $PropertyType<RefreshControlProps, "onRefresh">,
refreshControl?: boolean,
onEndReached?: () => void,
onEndReachedThreshold?: number,
style?: StyleProp<ViewStyle>,
data: T[],
renderItem: (x: {
item: T,
i: number,...
}) => Element,
LoadingView?: React.ComponentType<any> | React.ReactElement | null,
ListHeaderComponent?: React.ReactNode | null,
ListEmptyComponent?: React.ComponentType<any> | React.ReactElement | null,
ListFooterComponent?: React.ComponentType<any> | React.ReactElement | null,
ListHeaderComponentStyle?: StyleProp<ViewStyle>,
contentContainerStyle?: StyleProp<ViewStyle>,
containerStyle?: StyleProp<ViewStyle>,
numColumns?: number,
keyExtractor?: ((item: T | any, index: number) => string) | void,
refreshControlProps?: $Diff<RefreshControlProps,{ "onRefresh": any,
"refreshing": any,
}>,...
} & Omit<ScrollViewProps, "refreshControl">
declare function MasonryList<T>(props: Props<T>): Element
declare var _default: React.MemoExoticComponent<typeof MasonryList>;declare export default typeof _default
